version: '3.7'

services:
  sql-migration:
    build:
      context: .
      dockerfile: .docker/go/dev/Dockerfile
      args:
        install_compile_deamon: "off"
        install_goose: "on"
    volumes:
      - type: bind
        source: .
        target: /app
    networks:
      - buff

  rest:
    build:
      context: .
      dockerfile: .docker/go/dev/Dockerfile
      args:
        install_compile_deamon: "on"
        install_goose: "off"
    command: bash -c 'CompileDaemon -log-prefix=false -build="go build -race -o bin/rest ./cmd/rest" -command="./bin/rest -addr :8000" --graceful-kill=true -color=true'
    environment:
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      DB_HOST: ${DB_HOST}
      DB_NAME: ${DB_NAME}
      DB_PORT: ${DB_PORT}
    volumes:
      - type: bind
        source: .
        target: /app
    expose:
      - 8000
    ports:
      - ${LOCAL_REST_PORT}:8000
    networks:
      - buff

  test:
    build:
      context: .
      dockerfile: .docker/go/dev/Dockerfile
      args:
        install_compile_deamon: "off"
        install_goose: "off"
    command: bash -c 'go test $$(go list ./domains/... | grep -v "mock" | grep -v "repository") -v --count=1 -coverprofile=coverage.out fmt'
    volumes:
      - type: bind
        source: .
        target: /app
    networks:
      - buff

  postgres:
    image: postgres:11.6
    container_name: buff_postgres
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
    expose:
      - 5432
    ports:
      - ${LOCAL_DB_PORT}:5432
    volumes:
      - pgdata11:/var/lib/postgresql/data
    networks:
      - buff

volumes:
  pgdata11:

networks:
  buff:
    driver: bridge
    name: "buff"